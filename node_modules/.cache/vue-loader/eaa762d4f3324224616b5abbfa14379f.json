{"remainingRequest":"/Users/nicolas/Workplace/nicolasmonnier/blog-nico/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nicolas/Workplace/nicolasmonnier/blog-nico/src/components/BlogPosts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nicolas/Workplace/nicolasmonnier/blog-nico/src/components/BlogPosts.vue","mtime":1604331827399},{"path":"/Users/nicolas/Workplace/nicolasmonnier/blog-nico/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nicolas/Workplace/nicolasmonnier/blog-nico/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/nicolas/Workplace/nicolasmonnier/blog-nico/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/nicolas/Workplace/nicolasmonnier/blog-nico/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'blog-posts',\n  data () {\n    return {\n      posts: [],\n      dateOptions: { year: 'numeric', month: 'short', day: '2-digit' },\n      linkResolver: this.$prismic.linkResolver\n    }\n  },\n  methods: {\n    getPosts (tags) {\n      if (tags == undefined){\n        this.$prismic.client.query(\n          this.$prismic.Predicates.at('document.type', \"post\"),\n          { orderings : '[my.post.date desc]' }\n        ).then((response) => {\n          this.posts = response.results;\n        })\n      }\n      else {\n        this.$prismic.client.query(\n          this.$prismic.Predicates.at('document.tags', [tags]),\n          { orderings : '[my.post.date desc]'}\n        ).then((response) => {\n          this.posts = response.results;\n        })\n      }\n      //Query to get blog posts\n\n    },\n    //Function to get the first paragraph of text in a blog post and limit the displayed text at 300 characters\n    getFirstParagraph (post) {\n      const textLimit = 300;\n      const slices = post.data.body;\n      let firstParagraph = '';\n      let haveFirstParagraph = false;\n\n      slices.map(function(slice) {\n        if (!haveFirstParagraph) {\n          if (slice.slice_type == \"text\") {\n            slice.primary.text.forEach(function(block){\n              if (block.type == \"paragraph\") {\n                if (!haveFirstParagraph) {\n                  firstParagraph += block.text;\n                  haveFirstParagraph = true;\n                }\n              }\n            });\n          }\n        }\n      });\n\n      const limitedText = firstParagraph.substr(0, textLimit)\n\n      if (firstParagraph.length > textLimit) {\n        return limitedText.substr(0, limitedText.lastIndexOf(' ')) + '...';\n      }\n      else {\n        return firstParagraph;\n      }\n    },\n  },\n  created () {\n    this.getPosts()\n  }\n}\n",{"version":3,"sources":["BlogPosts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BlogPosts.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <!-- Check blog posts exist -->\n\n  <div v-if=\"posts.length !== 0\" class=\"blog-main\">\n    <div class=\"nav-links\">\n      <button v-on:click=\"getPosts()\">Tous</button>\n      <button v-on:click=\"getPosts('dev')\">Dev</button>\n      <button v-on:click=\"getPosts('politique')\">Politique</button>\n    </div>\n    <!-- Template for blog posts -->\n    <div v-for=\"post in posts\" :key=\"post.id\" v-bind:post=\"post\" class=\"blog-post\">\n      <router-link :to=\"linkResolver(post)\">\n        <h2>{{ $prismic.richTextAsPlain(post.data.title) }}</h2>\n        <p class=\"blog-post-meta\"><span class=\"created-at\">{{ Intl.DateTimeFormat('en-US', dateOptions).format(new Date(post.data.date)) }}</span></p>\n        <div>\n          <p>{{getFirstParagraph(post)}}</p>\n        </div>\n      </router-link>\n    </div>\n  </div>\n  <!-- If no blog posts return message -->\n  <div v-else class=\"blog-main\">\n    <button v-on:click=\"getPosts()\">Tous</button>\n    <button v-on:click=\"getPosts('dev')\">Dev</button>\n    <button v-on:click=\"getPosts('politique')\">Politique</button>\n    <p>No Posts published at this time.</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'blog-posts',\n  data () {\n    return {\n      posts: [],\n      dateOptions: { year: 'numeric', month: 'short', day: '2-digit' },\n      linkResolver: this.$prismic.linkResolver\n    }\n  },\n  methods: {\n    getPosts (tags) {\n      if (tags == undefined){\n        this.$prismic.client.query(\n          this.$prismic.Predicates.at('document.type', \"post\"),\n          { orderings : '[my.post.date desc]' }\n        ).then((response) => {\n          this.posts = response.results;\n        })\n      }\n      else {\n        this.$prismic.client.query(\n          this.$prismic.Predicates.at('document.tags', [tags]),\n          { orderings : '[my.post.date desc]'}\n        ).then((response) => {\n          this.posts = response.results;\n        })\n      }\n      //Query to get blog posts\n\n    },\n    //Function to get the first paragraph of text in a blog post and limit the displayed text at 300 characters\n    getFirstParagraph (post) {\n      const textLimit = 300;\n      const slices = post.data.body;\n      let firstParagraph = '';\n      let haveFirstParagraph = false;\n\n      slices.map(function(slice) {\n        if (!haveFirstParagraph) {\n          if (slice.slice_type == \"text\") {\n            slice.primary.text.forEach(function(block){\n              if (block.type == \"paragraph\") {\n                if (!haveFirstParagraph) {\n                  firstParagraph += block.text;\n                  haveFirstParagraph = true;\n                }\n              }\n            });\n          }\n        }\n      });\n\n      const limitedText = firstParagraph.substr(0, textLimit)\n\n      if (firstParagraph.length > textLimit) {\n        return limitedText.substr(0, limitedText.lastIndexOf(' ')) + '...';\n      }\n      else {\n        return firstParagraph;\n      }\n    },\n  },\n  created () {\n    this.getPosts()\n  }\n}\n</script>\n\n<style scoped>\n.nav-links {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 30px;\n}\n.blog-main {\n  max-width: 700px;\n  margin: auto;\n}\n.blog-post {\n  margin-bottom: 3rem;\n}\n.blog-post h2 {\n  margin: 0;\n}\n\n.blog-post-meta {\n  color: #9A9A9A;\n  font-family: 'Lato', sans-serif;\n  margin-bottom: 8px;\n  font-size: 16px;\n}\n/* Media Queries */\n@media (max-width: 767px) {\n  .blog-main {\n    padding: 0 20px;\n    font-size: 18px;\n  }\n}\n</style>\n"]}]}